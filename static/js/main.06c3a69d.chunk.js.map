{"version":3,"sources":["components/Business/Business.js","components/Loader/Loader.js","components/BusinessList/BusinessList.js","components/SearchBar/SearchBar.js","util/Yelp.js","components/Navigation/ButtonAppBar.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Business","className","src","this","props","business","imageSrc","alt","name","address","city","state","zipCode","category","rating","reviewCount","React","Component","makeStyles","theme","root","display","marginLeft","spacing","BusinessList","isLoading","businesses","map","key","id","SearchBar","term","location","sortBy","handleTermChange","bind","handleLocationChange","handleSearch","sortByOptions","sortByOption","setState","event","target","value","searchYelp","preventDefault","Object","keys","sortByOptionValue","getSortByClass","onClick","handleSortByChange","renderSortByOptions","placeholder","onChange","Yelp","fetch","headers","Authorization","process","then","response","json","jsonResponse","console","log","image_url","address1","categories","title","review_count","useStyles","flexGrow","menuButton","marginRight","fontFamily","background","backgroundColor","red","ButtonAppBar","classes","AppBar","position","Toolbar","Typography","variant","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"oWA6BeA,G,yLAvBP,OACI,yBAAKC,UAAU,YACX,yBAAKA,UAAU,mBACf,yBAAKC,IAAKC,KAAKC,MAAMC,SAASC,SAAUC,IAAI,MAE5C,4BAAKJ,KAAKC,MAAMC,SAASG,MACzB,yBAAKP,UAAU,wBACf,yBAAKA,UAAU,oBACX,2BAAIE,KAAKC,MAAMC,SAASI,SACxB,2BAAIN,KAAKC,MAAMC,SAASK,MACxB,2BAAIP,KAAKC,MAAMC,SAASM,MAAOR,KAAKC,MAAMC,SAASO,UAEvD,yBAAKX,UAAU,oBACX,4BAAKE,KAAKC,MAAMC,SAASQ,UACzB,wBAAIZ,UAAU,UAAUE,KAAKC,MAAMC,SAASS,QAC5C,2BAAIX,KAAKC,MAAMC,SAASU,oB,GAjBrBC,IAAMC,Y,cCAXC,aAAW,SAACC,GAAD,MAAY,CACxCC,KAAM,CACLC,QAAS,OACT,YAAa,CACZC,WAAYH,EAAMI,QAAQ,S,ICedC,E,kDAjBd,WAAYpB,GAAQ,IAAD,8BAClB,cAAMA,IACDO,MAAQ,CAAEc,WAAW,GAFR,E,qDAMlB,OACC,yBAAKxB,UAAU,gBACbE,KAAKC,MAAMsB,WAAWC,KAAI,SAACtB,GAC3B,OAAO,kBAAC,EAAD,CAAUuB,IAAKvB,EAASwB,GAAIxB,SAAUA,OAE9C,wBAAIwB,GAAG,SAAP,yD,GAZuBb,IAAMC,WCmFlBa,G,wDApFd,WAAY1B,GAAQ,IAAD,8BAClB,cAAMA,IACDO,MAAQ,CACZoB,KAAM,GACNC,SAAU,GACVC,OAAQ,cAGT,EAAKC,iBAAmB,EAAKA,iBAAiBC,KAAtB,gBACxB,EAAKC,qBAAuB,EAAKA,qBAAqBD,KAA1B,gBAC5B,EAAKE,aAAe,EAAKA,aAAaF,KAAlB,gBAEpB,EAAKG,cAAgB,CACpB,aAAc,aACd,gBAAiB,SACjB,gBAAiB,gBAfA,E,2DAmBJC,GACd,OAAIpC,KAAKQ,MAAMsB,SAAWM,EAClB,SAED,K,yCAGWA,GAClBpC,KAAKqC,SAAS,CAAEP,OAAQM,M,uCAGRE,GAChBtC,KAAKqC,SAAS,CAAET,KAAMU,EAAMC,OAAOC,U,2CAGfF,GACpBtC,KAAKqC,SAAS,CAAER,SAAUS,EAAMC,OAAOC,U,mCAG3BF,GACZtC,KAAKC,MAAMwC,WACVzC,KAAKQ,MAAMoB,KACX5B,KAAKQ,MAAMqB,SACX7B,KAAKQ,MAAMsB,QAEZQ,EAAMI,mB,4CAGgB,IAAD,OACrB,OAAOC,OAAOC,KAAK5C,KAAKmC,eAAeX,KAAI,SAACY,GAC3C,IAAIS,EAAoB,EAAKV,cAAcC,GAC3C,OACC,wBACCtC,UAAW,EAAKgD,eAAeD,GAC/BpB,IAAKoB,EACLE,QAAS,EAAKC,mBAAmBhB,KAAK,EAAMa,IAE3CT,Q,+BAOJ,OACC,yBAAKtC,UAAU,aACd,yBAAKA,UAAU,0BACd,4BAAKE,KAAKiD,wBAEX,yBAAKnD,UAAU,oBACd,2BACCoD,YAAY,oBACZC,SAAUnD,KAAK+B,mBAEhB,2BAAOmB,YAAY,SAASC,SAAUnD,KAAKiC,wBAE5C,yBAAKnC,UAAU,oBACd,uBAAGiD,QAAS/C,KAAKkC,cAAjB,aAED,yBAAKpC,UAAU,uB,GA/EKe,IAAMC,YCgCfsC,EAnCF,CACZX,WADY,SACDb,EAAMC,EAAUC,GAC1B,OAAOuB,MAAM,sFAAD,OAC2EzB,EAD3E,qBAC4FC,EAD5F,oBACgHC,GAC3H,CACCwB,QAAS,CACRC,cAAc,UAAD,OAAYC,uIAI1BC,MAAK,SAACC,GACN,OAAOA,EAASC,UAEhBF,MAAK,SAACG,GACN,GAAIA,EAAarC,WAChB,OAAOqC,EAAarC,WAAWC,KAAI,SAACtB,GAEnC,OADA2D,QAAQC,IAAI5D,GACL,CACNwB,GAAIxB,EAASwB,GACbvB,SAAUD,EAAS6D,UACnB1D,KAAMH,EAASG,KACfC,QAASJ,EAAS2B,SAASmC,SAC3BzD,KAAML,EAAS2B,SAAStB,KACxBC,MAAON,EAAS2B,SAASrB,MACzBC,QAASP,EAAS2B,SAASpB,QAC3BC,SAAUR,EAAS+D,WAAW,GAAGC,MACjCvD,OAAQT,EAASS,OACjBC,YAAaV,EAASiE,sB,gCCjBvBC,EAAYrD,aAAW,SAACC,GAAD,MAAY,CACxCC,KAAM,CACLoD,SAAU,GAEXC,WAAY,CACXC,YAAavD,EAAMI,QAAQ,IAE5B8C,MAAO,CACNG,SAAU,EACVG,WAAY,WAEbC,WAAY,CACXC,gBAAiBC,IAAI,UAIR,SAASC,IACvB,IAAMC,EAAUT,IAEhB,OACC,yBAAKtE,UAAW+E,EAAQ5D,MACvB,kBAAC6D,EAAA,EAAD,CAAQC,SAAS,SAASjF,UAAW+E,EAAQJ,YAC5C,kBAACO,EAAA,EAAD,KASC,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKpF,UAAW+E,EAAQX,OAA5C,wB,ICNUiB,E,kDA3Bd,WAAYlF,GAAQ,IAAD,8BAClB,cAAMA,IAEDO,MAAQ,CACZe,WAAY,IAEb,EAAKkB,WAAa,EAAKA,WAAWT,KAAhB,gBANA,E,uDASRJ,EAAMC,EAAUC,GAAS,IAAD,OAClCsB,EAAKX,WAAWb,EAAMC,EAAUC,GAAQ2B,MAAK,SAAClC,GAC7C,EAAKc,SAAS,CAAEd,WAAYA,S,+BAK7B,OACC,yBAAKzB,UAAU,OAEd,kBAAC8E,EAAD,MACA,kBAAC,EAAD,CAAWnC,WAAYzC,KAAKyC,aAC5B,kBAAC,EAAD,CAAclB,WAAYvB,KAAKQ,MAAMe,kB,GAtBvBV,IAAMC,WCKJsE,QACW,cAA7BC,OAAOxD,SAASyD,UAEe,UAA7BD,OAAOxD,SAASyD,UAEhBD,OAAOxD,SAASyD,SAASC,MACvB,2DCZNC,IAASC,OACR,kBAAC,IAAMC,WAAP,KACC,kBAAC,EAAD,OAEDC,SAASC,eAAe,SDyHnB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBtC,MAAK,SAAAuC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLtC,QAAQsC,MAAMA,EAAMC,c","file":"static/js/main.06c3a69d.chunk.js","sourcesContent":["import React from 'react';\nimport './Business.css';\n\n\nclass Business extends React.Component {\n    render(){\n        return(\n            <div className=\"Business\">\n                <div className=\"image-container\">\n                <img src={this.props.business.imageSrc} alt=''/>\n                </div>\n                <h2>{this.props.business.name}</h2>\n                <div className=\"Business-information\">\n                <div className=\"Business-address\">\n                    <p>{this.props.business.address}</p>\n                    <p>{this.props.business.city}</p>\n                    <p>{this.props.business.state}{this.props.business.zipCode}</p>\n                </div>\n                <div className=\"Business-reviews\">\n                    <h3>{this.props.business.category}</h3>\n                    <h3 className=\"rating\">{this.props.business.rating}</h3>\n                    <p>{this.props.business.reviewCount}</p>\n                </div>\n            </div>\n          </div>\n        )\n    }\n}\n\nexport default Business;\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tdisplay: 'flex',\n\t\t'& > * + *': {\n\t\t\tmarginLeft: theme.spacing(2)\n\t\t}\n\t}\n}));\n\nexport default function CircularIndeterminate() {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<CircularProgress color=\"secondary\" />\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport './BusinessList.css';\nimport Business from '../Business/Business';\nimport CircularIndeterminate from '../Loader/Loader';\n\nclass BusinessList extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { isLoading: true };\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"BusinessList\">\n\t\t\t\t{this.props.businesses.map((business) => {\n\t\t\t\t\treturn <Business key={business.id} business={business} />;\n\t\t\t\t})}\n\t\t\t\t<h3 id=\"title\">SEARCH FOR BUSINESSES IN THE CITY OF YOUR CHOICE</h3>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default BusinessList;\n","import React from 'react';\nimport './SearchBar.css';\n\nclass SearchBar extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tterm: '',\n\t\t\tlocation: '',\n\t\t\tsortBy: 'best_match'\n\t\t};\n\n\t\tthis.handleTermChange = this.handleTermChange.bind(this);\n\t\tthis.handleLocationChange = this.handleLocationChange.bind(this);\n\t\tthis.handleSearch = this.handleSearch.bind(this);\n\n\t\tthis.sortByOptions = {\n\t\t\t'Best Match': 'best_match',\n\t\t\t'Highest Rated': 'rating',\n\t\t\t'Most Reviewed': 'review_count'\n\t\t};\n\t}\n\n\tgetSortByClass(sortByOption) {\n\t\tif (this.state.sortBy === sortByOption) {\n\t\t\treturn 'active';\n\t\t}\n\t\treturn '';\n\t}\n\n\thandleSortByChange(sortByOption) {\n\t\tthis.setState({ sortBy: sortByOption });\n\t}\n\n\thandleTermChange(event) {\n\t\tthis.setState({ term: event.target.value });\n\t}\n\n\thandleLocationChange(event) {\n\t\tthis.setState({ location: event.target.value });\n\t}\n\n\thandleSearch(event) {\n\t\tthis.props.searchYelp(\n\t\t\tthis.state.term,\n\t\t\tthis.state.location,\n\t\t\tthis.state.sortBy\n\t\t);\n\t\tevent.preventDefault();\n\t}\n\n\trenderSortByOptions() {\n\t\treturn Object.keys(this.sortByOptions).map((sortByOption) => {\n\t\t\tlet sortByOptionValue = this.sortByOptions[sortByOption];\n\t\t\treturn (\n\t\t\t\t<li\n\t\t\t\t\tclassName={this.getSortByClass(sortByOptionValue)}\n\t\t\t\t\tkey={sortByOptionValue}\n\t\t\t\t\tonClick={this.handleSortByChange.bind(this, sortByOptionValue)}\n\t\t\t\t>\n\t\t\t\t\t{sortByOption}\n\t\t\t\t</li>\n\t\t\t);\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"SearchBar\">\n\t\t\t\t<div className=\"SearchBar-sort-options\">\n\t\t\t\t\t<ul>{this.renderSortByOptions()}</ul>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"SearchBar-fields\">\n\t\t\t\t\t<input\n\t\t\t\t\t\tplaceholder=\"Search Businesses\"\n\t\t\t\t\t\tonChange={this.handleTermChange}\n\t\t\t\t\t/>\n\t\t\t\t\t<input placeholder=\"Where?\" onChange={this.handleLocationChange} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"SearchBar-submit\">\n\t\t\t\t\t<a onClick={this.handleSearch}>Let's Go</a>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"overlay-image\"></div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default SearchBar;\n","const Yelp = {\n\tsearchYelp(term, location, sortBy) {\n\t\treturn fetch(\n\t\t\t`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`,\n\t\t\t{\n\t\t\t\theaders: {\n\t\t\t\t\tAuthorization: `Bearer ${process.env.REACT_APP_YELP_API_KEY}`\n\t\t\t\t}\n\t\t\t}\n\t\t)\n\t\t\t.then((response) => {\n\t\t\t\treturn response.json();\n\t\t\t})\n\t\t\t.then((jsonResponse) => {\n\t\t\t\tif (jsonResponse.businesses) {\n\t\t\t\t\treturn jsonResponse.businesses.map((business) => {\n\t\t\t\t\t\tconsole.log(business);\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tid: business.id,\n\t\t\t\t\t\t\timageSrc: business.image_url,\n\t\t\t\t\t\t\tname: business.name,\n\t\t\t\t\t\t\taddress: business.location.address1,\n\t\t\t\t\t\t\tcity: business.location.city,\n\t\t\t\t\t\t\tstate: business.location.state,\n\t\t\t\t\t\t\tzipCode: business.location.zipCode,\n\t\t\t\t\t\t\tcategory: business.categories[0].title,\n\t\t\t\t\t\t\trating: business.rating,\n\t\t\t\t\t\t\treviewCount: business.review_count\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t}\n};\n\nexport default Yelp;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n// import Button from '@material-ui/core/Button';\n// import IconButton from '@material-ui/core/IconButton';\n// import MenuIcon from '@material-ui/icons/Menu';\nimport { red } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tflexGrow: 1\n\t},\n\tmenuButton: {\n\t\tmarginRight: theme.spacing(2)\n\t},\n\ttitle: {\n\t\tflexGrow: 1,\n\t\tfontFamily: 'Raleway'\n\t},\n\tbackground: {\n\t\tbackgroundColor: red[500]\n\t}\n}));\n\nexport default function ButtonAppBar() {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<AppBar position=\"static\" className={classes.background}>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t{/* <IconButton\n\t\t\t\t\t\tedge=\"start\"\n\t\t\t\t\t\tclassName={classes.menuButton}\n\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\taria-label=\"menu\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<MenuIcon />\n\t\t\t\t\t</IconButton> */}\n\t\t\t\t\t<Typography variant=\"h6\" className={classes.title}>\n\t\t\t\t\t\tRestaurant Search\n\t\t\t\t\t</Typography>\n\t\t\t\t\t{/* <Button color=\"inherit\">Login</Button> */}\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport './App.css';\nimport BusinessList from '../BusinessList/BusinessList';\nimport SearchBar from '../SearchBar/SearchBar';\nimport Yelp from '../../util/Yelp';\nimport ButtonAppBar from '../Navigation/ButtonAppBar';\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tbusinesses: []\n\t\t};\n\t\tthis.searchYelp = this.searchYelp.bind(this);\n\t}\n\n\tsearchYelp(term, location, sortBy) {\n\t\tYelp.searchYelp(term, location, sortBy).then((businesses) => {\n\t\t\tthis.setState({ businesses: businesses });\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t{/* <h1>Restaurant Search!</h1> */}\n\t\t\t\t<ButtonAppBar />\n\t\t\t\t<SearchBar searchYelp={this.searchYelp} />\n\t\t\t\t<BusinessList businesses={this.state.businesses} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n\n// const business = {\n//   imageSrc: 'https://s3.amazonaws.com/codecademy-content/programs/react/ravenous/pizza.jpg',\n//   name: 'MarginOtto Pizzeria',\n//   address: '1010 Paddington Way',\n//   city: 'Flavortown',\n//   state: 'NY',\n//   zipCode: '10101',\n//   category: 'Italian',\n//   rating: 4.5,\n//   reviewCount: 90\n// };\n\n// const businesses = [\n//   business,\n//   business,\n//   business,\n//   business,\n//   business,\n//   business\n// ];\n\n// testing branch\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}