{"version":3,"sources":["components/Business/Business.js","components/BusinessList/BusinessList.js","components/SearchBar/SearchBar.js","util/Yelp.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Business","className","src","this","props","business","imageSrc","alt","name","address","city","state","zipCode","category","rating","reviewCount","React","Component","BusinessList","businesses","map","key","id","SearchBar","term","location","sortBy","handleTermChange","bind","handleLocationChange","handleSearch","sortByOptions","sortByOption","setState","event","target","value","searchYelp","preventDefault","Object","keys","sortByOptionValue","getSortByClass","onClick","handleSortByChange","renderSortByOptions","placeholder","onChange","Yelp","fetch","headers","Authorization","process","then","response","json","jsonResponse","console","log","image_url","address1","categories","title","review_count","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.be9a79cd.chunk.js","sourcesContent":["import React from 'react';\nimport './Business.css';\n\n\nclass Business extends React.Component {\n    render(){\n        return(\n            <div className=\"Business\">\n                <div className=\"image-container\">\n                <img src={this.props.business.imageSrc} alt=''/>\n                </div>\n                <h2>{this.props.business.name}</h2>\n                <div className=\"Business-information\">\n                <div className=\"Business-address\">\n                    <p>{this.props.business.address}</p>\n                    <p>{this.props.business.city}</p>\n                    <p>{this.props.business.state}{this.props.business.zipCode}</p>\n                </div>\n                <div className=\"Business-reviews\">\n                    <h3>{this.props.business.category}</h3>\n                    <h3 className=\"rating\">{this.props.business.rating}</h3>\n                    <p>{this.props.business.reviewCount}</p>\n                </div>\n            </div>\n          </div>\n        )\n    }\n}\n\nexport default Business;\n\n","import React from 'react';\nimport './BusinessList.css';\nimport Business from '../Business/Business';\n\nclass BusinessList extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"BusinessList\">\n\t\t\t\t{this.props.businesses.map((business) => {\n\t\t\t\t\treturn <Business key={business.id} business={business} />;\n\t\t\t\t})}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default BusinessList;\n","import React from 'react';\nimport './SearchBar.css';\n\nclass SearchBar extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tterm: '',\n\t\t\tlocation: '',\n\t\t\tsortBy: 'best_match'\n\t\t};\n\n\t\tthis.handleTermChange = this.handleTermChange.bind(this);\n\t\tthis.handleLocationChange = this.handleLocationChange.bind(this);\n\t\tthis.handleSearch = this.handleSearch.bind(this);\n\n\t\tthis.sortByOptions = {\n\t\t\t'Best Match': 'best_match',\n\t\t\t'Highest Rated': 'rating',\n\t\t\t'Most Reviewed': 'review_count'\n\t\t};\n\t}\n\n\tgetSortByClass(sortByOption) {\n\t\tif (this.state.sortBy === sortByOption) {\n\t\t\treturn 'active';\n\t\t}\n\t\treturn '';\n\t}\n\n\thandleSortByChange(sortByOption) {\n\t\tthis.setState({ sortBy: sortByOption });\n\t}\n\n\thandleTermChange(event) {\n\t\tthis.setState({ term: event.target.value });\n\t}\n\n\thandleLocationChange(event) {\n\t\tthis.setState({ location: event.target.value });\n\t}\n\n\thandleSearch(event) {\n\t\tthis.props.searchYelp(\n\t\t\tthis.state.term,\n\t\t\tthis.state.location,\n\t\t\tthis.state.sortBy\n\t\t);\n\t\tevent.preventDefault();\n\t}\n\n\trenderSortByOptions() {\n\t\treturn Object.keys(this.sortByOptions).map((sortByOption) => {\n\t\t\tlet sortByOptionValue = this.sortByOptions[sortByOption];\n\t\t\treturn (\n\t\t\t\t<li\n\t\t\t\t\tclassName={this.getSortByClass(sortByOptionValue)}\n\t\t\t\t\tkey={sortByOptionValue}\n\t\t\t\t\tonClick={this.handleSortByChange.bind(this, sortByOptionValue)}\n\t\t\t\t>\n\t\t\t\t\t{sortByOption}\n\t\t\t\t</li>\n\t\t\t);\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"SearchBar\">\n\t\t\t\t<div className=\"SearchBar-sort-options\">\n\t\t\t\t\t<ul>{this.renderSortByOptions()}</ul>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"SearchBar-fields\">\n\t\t\t\t\t<input\n\t\t\t\t\t\tplaceholder=\"Search Businesses\"\n\t\t\t\t\t\tonChange={this.handleTermChange}\n\t\t\t\t\t/>\n\t\t\t\t\t<input placeholder=\"Where?\" onChange={this.handleLocationChange} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"SearchBar-submit\">\n\t\t\t\t\t<a onClick={this.handleSearch}>Let's Go</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default SearchBar;\n","const Yelp = {\n\tsearchYelp(term, location, sortBy) {\n\t\treturn fetch(\n\t\t\t`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`,\n\t\t\t{\n\t\t\t\theaders: {\n\t\t\t\t\tAuthorization: `Bearer ${process.env.REACT_APP_YELP_API_KEY}`\n\t\t\t\t}\n\t\t\t}\n\t\t)\n\t\t\t.then((response) => {\n\t\t\t\treturn response.json();\n\t\t\t})\n\t\t\t.then((jsonResponse) => {\n\t\t\t\tif (jsonResponse.businesses) {\n\t\t\t\t\treturn jsonResponse.businesses.map((business) => {\n\t\t\t\t\t\tconsole.log(business);\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tid: business.id,\n\t\t\t\t\t\t\timageSrc: business.image_url,\n\t\t\t\t\t\t\tname: business.name,\n\t\t\t\t\t\t\taddress: business.location.address1,\n\t\t\t\t\t\t\tcity: business.location.city,\n\t\t\t\t\t\t\tstate: business.location.state,\n\t\t\t\t\t\t\tzipCode: business.location.zipCode,\n\t\t\t\t\t\t\tcategory: business.categories[0].title,\n\t\t\t\t\t\t\trating: business.rating,\n\t\t\t\t\t\t\treviewCount: business.review_count\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t}\n};\n\nexport default Yelp;\n","import React from 'react';\nimport './App.css';\nimport BusinessList from '../BusinessList/BusinessList';\nimport SearchBar from '../SearchBar/SearchBar';\nimport Yelp from '../../util/Yelp';\n\nconsole.log(process.env.REACT_APP_YELP_API_KEY);\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tbusinesses: []\n\t\t};\n\t\tthis.searchYelp = this.searchYelp.bind(this);\n\t}\n\n\tsearchYelp(term, location, sortBy) {\n\t\tYelp.searchYelp(term, location, sortBy).then((businesses) => {\n\t\t\tthis.setState({ businesses: businesses });\n\t\t});\n\t}\n\n\trender() {\n\t\tconsole.log(process.env);\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<h1>Restaurant Search!</h1>\n\t\t\t\t<SearchBar searchYelp={this.searchYelp} />\n\t\t\t\t<BusinessList businesses={this.state.businesses} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n\n// const business = {\n//   imageSrc: 'https://s3.amazonaws.com/codecademy-content/programs/react/ravenous/pizza.jpg',\n//   name: 'MarginOtto Pizzeria',\n//   address: '1010 Paddington Way',\n//   city: 'Flavortown',\n//   state: 'NY',\n//   zipCode: '10101',\n//   category: 'Italian',\n//   rating: 4.5,\n//   reviewCount: 90\n// };\n\n// const businesses = [\n//   business,\n//   business,\n//   business,\n//   business,\n//   business,\n//   business\n// ];\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}